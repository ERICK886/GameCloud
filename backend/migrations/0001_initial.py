# Generated by Django 5.1 on 2024-08-17 14:59

import django.db.models.deletion
from django.db import migrations, models, transaction

from backend.func.config import get_config

ADMIN = get_config('ADMIN')
if not ADMIN:
    user_data = [
        {
            'username': 'admin',
            'password': '000000',
            'email': 'abc@example.com',
            'nickname': '管理员',
            'is_admin': True,
        }
    ]
else:
    user_data = [
        {
            'username': ADMIN['USERNAME'],
            'password': ADMIN['PASSWORD'],
            'email': ADMIN['EMAIL'],
            'nickname': ADMIN['NICKNAME'],
            'is_admin': True,
        }
    ]

category_data = [
    {
        'name': '默认分类',
        'slug': 'default',
        'description': '默认分类',
        'status': True,
    }
]

tag_data = [
    {
        'name': '默认标签',
        'slug': 'default',
        'description': '默认标签',
        'status': True,
    }
]

cover_data = [
    {
        'name': '默认封面',
        'description': '默认封面',
    }
]


def initial_data(apps, schema_editor):
    User = apps.get_model('backend', 'User')
    Category = apps.get_model('backend', 'Category')
    Tag = apps.get_model('backend', 'Tag')
    Cover = apps.get_model('backend', 'Cover')
    db_alias = schema_editor.connection.alias

    with transaction.atomic():
        for data in user_data:
            User.objects.using(db_alias).create(**data)

        for data in category_data:
            Category.objects.using(db_alias).create(**data)

        for data in tag_data:
            Tag.objects.using(db_alias).create(**data)

        for data in cover_data:
            Cover.objects.using(db_alias).create(**data)


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='分类名')),
                ('slug', models.SlugField(max_length=100, verbose_name='分类别名')),
                ('description', models.TextField(verbose_name='分类描述')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '分类',
                'verbose_name_plural': '分类',
                'db_table': 'rc_category',
            },
        ),
        migrations.CreateModel(
            name='Cover',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='封面名')),
                ('description', models.TextField(verbose_name='封面描述')),
                ('cover',
                 models.ImageField(default='cover/default.png', upload_to='cover/%Y/%m/%d/', verbose_name='封面')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '封面',
                'verbose_name_plural': '封面',
                'db_table': 'rc_cover',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='图片名')),
                ('description', models.TextField(blank=True, null=True, verbose_name='图片描述')),
                ('image', models.ImageField(upload_to='image/%Y/%m/%d/', verbose_name='图片')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '图片',
                'verbose_name_plural': '图片',
                'db_table': 'rc_image',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='标签名')),
                ('slug', models.SlugField(max_length=100, verbose_name='标签别名')),
                ('description', models.TextField(verbose_name='标签描述')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
                'db_table': 'rc_tag',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100, verbose_name='用户名')),
                ('password', models.CharField(max_length=100, verbose_name='密码')),
                ('nickname', models.CharField(max_length=100, verbose_name='昵称')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='邮箱')),
                ('avatar',
                 models.ImageField(blank=True, default='avatar/default.png', null=True, upload_to='avatar/%Y/%m/%d/',
                                   verbose_name='头像')),
                ('is_active', models.BooleanField(default=False, verbose_name='是否激活')),
                ('is_admin', models.BooleanField(default=False, verbose_name='是否管理员')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'rc_user',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='视频名')),
                ('description', models.TextField(blank=True, null=True, verbose_name='视频描述')),
                ('video', models.FileField(upload_to='video/%Y/%m/%d/', verbose_name='视频')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '视频',
                'verbose_name_plural': '视频',
                'db_table': 'rc_video',
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='资源名')),
                ('description', models.TextField(default='', verbose_name='资源描述')),
                ('content', models.TextField(default='', verbose_name='资源内容')),
                ('baidu_url', models.URLField(default='', verbose_name='百度云链接')),
                ('tianyi_url', models.URLField(default='', verbose_name='天翼云链接')),
                ('aliyun_url', models.URLField(default='', verbose_name='阿里云链接')),
                ('active_code', models.CharField(max_length=100, verbose_name='激活码')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('category',
                 models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='backend.category',
                                   verbose_name='分类')),
                ('cover', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='backend.cover',
                                            verbose_name='封面')),
                ('images', models.ManyToManyField(blank=True, null=True, to='backend.image', verbose_name='图片')),
                ('tags', models.ManyToManyField(blank=True, null=True, to='backend.tag', verbose_name='标签')),
                ('videos', models.ManyToManyField(blank=True, null=True, to='backend.video', verbose_name='视频')),
            ],
            options={
                'verbose_name': '资源',
                'verbose_name_plural': '资源',
                'db_table': 'rc_resource',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='评论内容')),
                ('is_check', models.BooleanField(default=False, verbose_name='是否审核')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                            to='backend.comment', verbose_name='回复')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.resource',
                                               verbose_name='资源')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.user',
                                           verbose_name='用户')),
            ],
            options={
                'verbose_name': '评论',
                'verbose_name_plural': '评论',
                'db_table': 'rc_comment',
            },
        ),
        migrations.RunPython(initial_data)
    ]
